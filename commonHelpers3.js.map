{"version":3,"file":"commonHelpers3.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTime = document.querySelector('#datetime-picker');\nconst buttonStart = document.querySelector('button[data-start]');\nconst daysField = document.querySelector('span[data-days]');\nconst hoursField = document.querySelector('span[data-hours]');\nconst minutesField = document.querySelector('span[data-minutes]');\nconst secondsField = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate;\nlet countdownInterval;\n\nbuttonStart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: '#fff',\n        backgroundColor: '#E53935',\n        animateInside: false,\n        progressBar: false,\n        position: 'topRight',\n      });\n      buttonStart.disabled = true;\n      return;\n    }\n    buttonStart.disabled = false;\n  },\n};\n\nflatpickr(dateTime, options);\n\nbuttonStart.addEventListener('click', () => {\n  countdownInterval = setInterval(() => {\n    const timeDifference = userSelectedDate - new Date();\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n    daysField.textContent = addLeadingZero(days);\n    hoursField.textContent = addLeadingZero(hours);\n    minutesField.textContent = addLeadingZero(minutes);\n    secondsField.textContent = addLeadingZero(seconds);\n    buttonStart.disabled = true;\n    dateTime.disabled = true;\n\n    if (timeDifference <= 1000) {\n      clearInterval(countdownInterval);\n      buttonStart.disabled = false;\n      dateTime.disabled = false;\n      return;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["dateTime","buttonStart","daysField","hoursField","minutesField","secondsField","userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAe,SAAS,cAAc,oBAAoB,EAEhE,IAAIC,EACAC,EAEJN,EAAY,SAAW,GAEvB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAH,EAAmBG,EAAc,CAAC,EAE9BH,EAAmB,IAAI,KAAQ,CACjCI,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,OACd,gBAAiB,UACjB,cAAe,GACf,YAAa,GACb,SAAU,UAClB,CAAO,EACDT,EAAY,SAAW,GACvB,MACD,CACDA,EAAY,SAAW,EACxB,CACH,EAEAU,EAAUX,EAAUQ,CAAO,EAE3BP,EAAY,iBAAiB,QAAS,IAAM,CAC1CM,EAAoB,YAAY,IAAM,CACpC,MAAMK,EAAiBN,EAAmB,IAAI,KACxC,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EASlE,GAPAV,EAAU,YAAcgB,EAAeL,CAAI,EAC3CV,EAAW,YAAce,EAAeJ,CAAK,EAC7CV,EAAa,YAAcc,EAAeH,CAAO,EACjDV,EAAa,YAAca,EAAeF,CAAO,EACjDf,EAAY,SAAW,GACvBD,EAAS,SAAW,GAEhBY,GAAkB,IAAM,CAC1B,cAAcL,CAAiB,EAC/BN,EAAY,SAAW,GACvBD,EAAS,SAAW,GACpB,MACD,CACF,EAAE,GAAI,CACT,CAAC,EAED,SAASiB,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}